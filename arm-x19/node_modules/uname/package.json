{
  "name": "uname",
  "version": "0.0.2",
  "description": "SUSv3 uname binding",
  "homepage": "https://github.com/davepacheco/node-uname",
  "author": {
    "name": "Dave Pacheco",
    "url": "dap@cs.brown.edu"
  },
  "contributors": [
    {
      "name": "Kenan Sulayman",
      "email": "kenan@sly.mn"
    }
  ],
  "keywords": [
    "uname",
    "version",
    "name",
    "binding",
    "susv3"
  ],
  "main": "./build/Release/binding.node",
  "scripts": {
    "test": "node ./test/test-uname-a.js",
    "install": "node-gyp rebuild"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/davepacheco/node-uname.git"
  },
  "gypfile": true,
  "readme": "node-uname\n==============\n\nOverview\n--------\n\nnode-uname is a node.js addon that exposes the standard uname function as\ndefined by IEEE Std 1003.1-2001 incorporated into the Single Unix Specification\nv3.  The uname function allows software to identify information about the\ncurrently running system software.  This information is useful primarily for\nidentification purposes but also as a last resort in determining what\ncapabilities are supported by a particular system.  Where possible, software\nshould test for the presence of specific features rather than hardcode which\nsystem releases support those features.\n\n\nPlatforms\n---------\n\nThis should work on any platform that implements the \"uname\" function as\ndescribed by the Single Unix Specification version 3.  It is known to work on\nMac OS X (tested on 10.6.5) and OpenSolaris build 147.\n\n\nInstallation\n------------\n\nAs a module, node-uname is installed in the usual way:\n\n      $ npm install uname\n\n\nAPI\n---\n\n### `uname.uname()`\n\nReturns an object with string members corresponding to the fields of `struct\nutsinfo` as described by the standard.  For convenience, these are described\nhere:\n\n\tsysname\t\tName of this implementation of the operating system. \n\tnodename\tName of this node within the communications network to\n\t\t\twhich this node is attached, if any. \n\trelease  \tCurrent release level of this implementation. \n\tversion  \tCurrent version level of this release. \n\tmachine  \tName of the hardware type on which the system is running. \n\nThis function generally cannot fail except in truly exceptional circumstances\n(like insufficient space to allocate the return value).\n\n\nExample\n--------\n\n### Reimplementing \"uname -s\" (see uname(1))\n\n      var uname = require('uname');\n      var utsname = uname.uname();\n      console.log(utsname.sysname);\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/davepacheco/node-uname/issues"
  },
  "_id": "uname@0.0.2",
  "_shasum": "6e8cdc74f4ae76a68a3926f22601a7a598915a0c",
  "_from": "uname@*",
  "_resolved": "https://registry.npmjs.org/uname/-/uname-0.0.2.tgz"
}
